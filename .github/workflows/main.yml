name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"

env:
  CARGO_TERM_COLOR: always

jobs:
  check-version:
    name: Check version
    runs-on: ubuntu-latest
    outputs:
      publish-version: ${{ steps.set-outputs.outputs.publish-version }}
      is-release: ${{ steps.set-outputs.outputs.is-release }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.58.0
      - name: Check version to publish and whether to make a release
        id: check-version
        uses: ./.github/actions/check-version
      - name: Set outputs
        id: set-outputs
        run: |
          echo "::set-output name=publish-version::${{ steps.check-version.outputs.publish-version }}"
          echo "::set-output name=is-release::${{ steps.check-version.outputs.is-release }}"

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Run tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379
    env:
      APP_CONFIG: localhost
      RUST_TEST_THREADS: 1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --features "unit_test integration_test"

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs:
      - check-version
      - fmt
      - clippy
      - test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish docker image
        id: publish
        uses: ./.github/actions/publish-image
        with:
          docker-img-name: "dlt-shortener"
          publish-version: ${{ needs.check-version.outputs.publish-version }}
